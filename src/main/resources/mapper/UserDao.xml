<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itauge.springbootshirobackend.dao.UserDao">
    <insert id="addUser">
        INSERT INTO sys_user
            (username, password, nickname)
        VALUES (#{username}, #{password}, #{nickname})
    </insert>

    <insert id="insertRole" useGeneratedKeys="true" keyProperty="roleId">
        INSERT INTO sys_role
            (role_name)
        VALUES (#{roleName})
    </insert>

    <insert id="insertRolePermission">
        insert into sys_role_permission (role_id, permission_id)
        values
        <foreach collection="permissions" item="item" index="index" separator=",">
            (#{roleId}, #{item})
        </foreach>
    </insert>

    <update id="updateUser">
        UPDATE sys_user
        SET
        nickname = #{user.nickname}
        <if test="password !='' and password !=null">
            , password = #{user.password}
        </if>
        , delete_status = #{user.deleteStatus}
        WHERE id = #{user.userId} and id != 10001
    </update>

    <update id="batchAddUserRole">
        insert into sys_user_role
        (user_id, role_id) values
        <foreach collection="roleIds" item="i" separator=",">
            (#{userId},#{i})
        </foreach>
    </update>

    <update id="removeUserAllRole">
        delete
        from sys_user_role
        where user_id = #{userId}
    </update>

    <update id="removeOldPermission">
        UPDATE sys_role_permission
        SET
        delete_status = '2'
        WHERE role_id = #{roleId}
        AND permission_id in (
        <foreach collection="permissions" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </update>

    <update id="updateRoleName">
        UPDATE sys_role
        SET role_name = #{roleName}
        WHERE id = #{roleId}
    </update>

    <update id="removeRole">
        UPDATE sys_role
        SET delete_status = '2'
        WHERE id = #{roleId}
          and id != 1
    </update>

    <update id="removeRoleAllPermission">
        UPDATE sys_role_permission
        SET delete_status = '2'
        WHERE role_id = #{roleId}
    </update>


    <select id="countUser" resultType="java.lang.Integer">
        select count(*) from sys_user u WHERE u.delete_status = '1';
    </select>

    <resultMap id="userMap" type="com.itauge.springbootshirobackend.entity.User">
        <id column="userId" property="id"></id>
        <result column="username" property="username"></result>
        <result column="nickname" property="nickname"></result>
        <result column="createTime" property="createTime"></result>
        <result column="updateTime" property="updateTime"></result>
        <result column="deleteStatus" property="deleteStatus"></result>
        <collection property="roles" ofType="com.alibaba.fastjson.JSONObject">
            <id column="roleId" property="roleId"></id>
            <result column="roleName" property="roleName"></result>
        </collection>
    </resultMap>

    <select id="listUser" resultMap="userMap">
        SELECT u.*,
               r.id        roleId,
               r.role_name roleName
        FROM (
                 SELECT id                                      userId,
                        username                                username,
                        nickname                                nickname,
                        delete_status                           deleteStatus,
                        DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                        DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = '1'
                 ORDER BY id
                     LIMIT #{pageStart}, #{pageSize}
             ) u
                 LEFT JOIN sys_user_role ur on ur.user_id = u.userId
                 LEFT JOIN sys_role r ON r.id = ur.role_id
        ORDER BY u.userId, r.id
    </select>

    <select id="getAllRoles" resultType="com.alibaba.fastjson.JSONObject">
        SELECT id        roleId,
               role_name roleName
        FROM sys_role
        WHERE delete_status = '1'
    </select>

    <select id="queryExistUsername" resultType="java.lang.Integer">
        select count(0)
        from sys_user
        where username = #{username}
            AND delete_status = '1';
    </select>


    <resultMap id="roleMap" type="com.itauge.springbootshirobackend.entity.RoleVO">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <collection property="users" ofType="com.alibaba.fastjson.JSONObject">
            <id column="userId" property="userId"/>
            <result column="nickname" property="nickname"/>
        </collection>
        <collection property="menus" ofType="com.itauge.springbootshirobackend.entity.RoleVO">
            <id column="menuCode" property="menuCode"/>
            <result column="menuName" property="menuName"/>
            <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
                <id column="permissionId" property="permissionId"/>
                <result column="permissionName" property="permissionName"/>
            </collection>
        </collection>
    </resultMap>
    <select id="listRole" resultMap="roleMap">
        SELECT r.id              roleId,
               r.role_name       roleName,
               u.id              userId,
               u.nickname,
               p.id              permissionId,
               p.menu_code       menuCode,
               p.menu_name       menuName,
               p.permission_name permissionName
        FROM sys_role r
                 LEFT JOIN sys_user_role ur on ur.role_id = r.id
                 LEFT JOIN sys_user u ON u.id = ur.user_id AND u.delete_status = '1'
                 LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
                 LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id
    </select>

    <resultMap id="permissionMap" type="com.itauge.springbootshirobackend.entity.RoleVO">
        <id column="menuName" property="menuName"/>
        <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
            <id column="id" property="id"/>
            <result column="permissionName" property="permissionName"/>
            <result column="requiredPerm" property="requiredPerm" javaType="Integer"/>
        </collection>
    </resultMap>
    <select id="listAllPermission" resultMap="permissionMap">
        SELECT p.id                  id,
               p.menu_name           menuName,
               p.permission_name     permissionName,
               p.required_permission requiredPerm
        FROM sys_permission p;
    </select>

    <resultMap id="aRole" type="com.itauge.springbootshirobackend.entity.RoleVO">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <collection property="users" ofType="com.alibaba.fastjson.JSONObject">
            <id column="userId" property="userId"/>
        </collection>
        <collection property="permissionIds" ofType="Integer">
            <id column="permissionId" property="permissionId"/>
        </collection>
    </resultMap>
    <select id="getRoleAllInfo" resultMap="aRole">
        SELECT r.id        roleId,
               r.role_name roleName,
               u.id        userId,
               p.id        permissionId
        FROM sys_role r
                 LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
                 LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
                 LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.id = #{roleId}
    </select>


</mapper>